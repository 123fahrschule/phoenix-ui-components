{
  "version": 3,
  "sources": ["../../assets/js/phoenix-ui-components/dropdown.js", "../../assets/js/helpers/isElementInViewport.js", "../../assets/js/phoenix-ui-components/multiselect.js"],
  "sourcesContent": ["export default (isOpen = false) => ({\n  isOpen,\n  open() {\n    this.isOpen = true;\n  },\n  close() {\n    this.isOpen = false;\n  },\n  toggle() {\n    this.isOpen = !this.isOpen;\n  },\n  toggler: {\n    '@click'() {\n      this.toggle();\n    }\n  },\n  arrowIcon: {\n    ':class'() {\n      return this.isOpen ? 'rotate-180' : '';\n    }\n  },\n  panel: {\n    'x-show'() {\n      return this.isOpen;\n    },\n    'x-transition:enter': 'transition ease-out duration-100',\n    'x-transition:enter-start': 'transform opacity-0 scale-95',\n    'x-transition:enter-end': 'transform opacity-100 scale-100',\n    'x-transition:leave': 'transition ease-in duration-75',\n    'x-transition:leave-start': 'transform opacity-100 scale-100',\n    'x-transition:leave-end': 'transform opacity-0 scale-95'\n  }\n});\n", "export function isElementInViewport(element) {\n  const rect = element.getBoundingClientRect();\n\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n}\n", "import dropdown from './dropdown';\nimport { isElementInViewport } from '../helpers/isElementInViewport';\n\nexport default ({ scrollOptionsIntoView = true }) => ({\n  ...dropdown(),\n  allOptions: {},\n  groupedOptions: [],\n  selectedValues: [],\n  filterString: '',\n\n  get normalizedFilterString() {\n    return this.filterString.toLowerCase();\n  },\n  get filteredOptionsGroups() {\n    if (!this.normalizedFilterString) {\n      return this.groupedOptions;\n    }\n\n    return this.groupedOptions\n      .map((group) => ({\n        ...group,\n        options: group.options.filter(({ normalizedLabel }) =>\n          normalizedLabel.includes(this.normalizedFilterString)\n        )\n      }))\n      .filter((group) => group.options.length);\n  },\n  get tags() {\n    return this.selectedValues.map((value) => this.allOptions[value]);\n  },\n\n  toggleOption(value) {\n    const index = this.selectedValues.indexOf(value);\n    if (index >= 0) {\n      this.selectedValues.splice(index, 1);\n    } else {\n      this.selectedValues.push(value);\n    }\n  },\n\n  deselectOption(value) {\n    this.selectedValues.splice(this.selectedValues.indexOf(value), 1);\n  },\n\n  toggleGroup(group) {\n    const selectedValues = new Set(this.selectedValues);\n    const values = group.options.map(({ value }) => value);\n    const allSelected = values.length && values.every((value) => selectedValues.has(value));\n\n    if (allSelected) {\n      values.forEach((value) => {\n        selectedValues.delete(value);\n      });\n    } else {\n      values.forEach((value) => {\n        selectedValues.add(value);\n      });\n    }\n\n    this.selectedValues = [...selectedValues];\n  },\n  scrollToOptions() {\n    this.$nextTick(() => {\n      const optionsElement = this.$root.querySelector('[x-bind=\"panel\"]');\n\n      if (!isElementInViewport(optionsElement)) {\n        optionsElement.scrollIntoView();\n      }\n    });\n  },\n\n  init() {\n    const options = Array.from(this.$root.querySelectorAll('option'));\n    const groups = Array.from(this.$root.querySelectorAll('optgroup'));\n\n    this.allOptions = options.reduce((acc, { value, innerText: label }) => {\n      acc[value] = { value, label, normalizedLabel: label.toLowerCase() };\n      return acc;\n    }, {});\n\n    this.selectedValues = options.filter(({ selected }) => selected).map(({ value }) => value);\n\n    let groupedOptions = [];\n\n    if (groups.length) {\n      groupedOptions = Array.from(groups).map((group) => {\n        const options = Array.from(group.querySelectorAll('option'));\n\n        return {\n          options,\n          label: group.label\n        };\n      });\n    } else {\n      groupedOptions = [{ options }];\n    }\n\n    this.groupedOptions = groupedOptions.map((optionsGroup) => ({\n      ...optionsGroup,\n      options: optionsGroup.options.map(({ value }) => this.allOptions[value])\n    }));\n\n    if (scrollOptionsIntoView) {\n      this.$watch('isOpen', (isOpen) => {\n        if (isOpen) {\n          this.scrollToOptions();\n        }\n      });\n    }\n  }\n});\n"],
  "mappings": "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",
  "names": []
}
